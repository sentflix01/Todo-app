{"mappings":"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","sources":["<anon>","script.js"],"sourcesContent":["const night = document.querySelector(\".night\");\nconst sunToggle = document.querySelector(\".sun-toggle\");\nconst todoSearch = document.querySelector(\".todoSearch\");\nconst todoInput = document.getElementById(\"todo-input\");\nconst todoListUL = document.querySelector(\".todo-list\");\nconst filterButtons = document.querySelectorAll(\".filter-buttons button\");\nconst clearCompletedBtn = document.querySelector(\".clear-completed\");\nconst itemsLeft = document.querySelector(\".items-left\");\nconst tourModal = document.getElementById(\"tourModal\");\nconst startTourBtn = document.getElementById(\"startTourBtn\");\nconst skipTourBtn = document.getElementById(\"skipTourBtn\");\n/*************************************/ /*Theme toggle*/ /************************************/ sunToggle.addEventListener(\"click\", ()=>{\n    document.body.classList.toggle(\"night\");\n});\n/*************************************/ /*Show tour modal on page load*/ /************************************/ tourModal.style.display = \"block\";\n/*************************************/ /*Start the tour*/ /************************************/ startTourBtn.onclick = function() {\n    tourModal.style.display = \"none\";\n    introJs().setOptions({\n        steps: [\n            {\n                intro: \"Welcome to SENT-TODO App! Let's take a quick tour.\"\n            },\n            {\n                element: document.querySelector(\".sun-toggle\"),\n                intro: \"Click here to change to Dark mode.\"\n            },\n            {\n                element: document.querySelector(\"#todo-input\"),\n                intro: \"You can create or search your tasks here.\"\n            },\n            {\n                element: document.querySelector(\".todo-list\"),\n                intro: \"This is the 'To Do' section where you can see tasks that need to be started.\"\n            },\n            {\n                element: document.querySelector(\".filter-buttons\"),\n                intro: \"Use these buttons to filter tasks by their status.\"\n            },\n            {\n                element: document.querySelector(\".clear-completed\"),\n                intro: \"Click here to clear completed tasks.\"\n            },\n            {\n                element: document.querySelector(\".items-left\"),\n                intro: \"look here to check how mony active classes are left.\"\n            },\n            {\n                intro: \"That's the end of the tour! You are ready to start using the dashboard.\"\n            }\n        ]\n    }).start();\n};\n/*************************************/ /*Skip the tour*/ /************************************/ skipTourBtn.onclick = function() {\n    tourModal.style.display = \"none\";\n};\n/*************************************/ /*localStorage*/ /************************************/ let allTodos = JSON.parse(localStorage.getItem(\"todos\")) || [];\nlet currentFilter = \"all\";\nconst saveItem = ()=>localStorage.setItem(\"todos\", JSON.stringify(allTodos));\n/*************************************/ /*add input value*/ /************************************/ todoSearch.addEventListener(\"submit\", (e)=>{\n    e.preventDefault();\n    addTodo();\n});\nfunction addTodo() {\n    const todoText = todoInput.value.trim();\n    if (todoText.length > 0) {\n        const todoObject = {\n            text: todoText,\n            completed: false\n        };\n        allTodos.push(todoObject);\n        saveItem();\n        renderTodos();\n        todoInput.value = \"\";\n    }\n}\n/*************************************/ /*generate todo list*/ /************************************/ function createTodoItem(todo, index) {\n    const todoLi = document.createElement(\"li\");\n    const todoId = \"todo-\" + index;\n    todoLi.className = \"list\";\n    todoLi.draggable = true;\n    todoLi.innerHTML = `\r\n    <input type=\"checkbox\" id=\"${todoId}\" ${todo.completed ? \"checked\" : \"\"} />\r\n    <label for=\"${todoId}\" class=\"list-item-checkbox ${todo.completed ? \"checked\" : \"\"}\"></label>\r\n    <label for=\"${todoId}\" class=\"list-item-text ${todo.completed ? \"completed\" : \"\"}\">${todo.text}</label>\r\n    <div class=\"list-item-delete-icon\">\\u{274C}</div>`;\n    return todoLi;\n}\n/*************************************/ /*Filter todos (all, active, completed)*/ /************************************/ filterButtons.forEach((button)=>{\n    button.addEventListener(\"click\", ()=>{\n        filterButtons.forEach((btn)=>btn.classList.remove(\"active\"));\n        button.classList.add(\"active\");\n        currentFilter = button.dataset.filter;\n        renderTodos();\n    });\n});\nfunction renderTodos() {\n    todoListUL.innerHTML = \"\";\n    const filteredTodos = allTodos.filter((todo)=>{\n        if (currentFilter === \"active\") return !todo.completed;\n        if (currentFilter === \"completed\") return todo.completed;\n        return true;\n    });\n    filteredTodos.forEach((todo, index)=>{\n        const todoItem = createTodoItem(todo, index);\n        todoListUL.appendChild(todoItem);\n    });\n    if (filteredTodos.length > 5) todoListUL.classList.add(\"scrollable\");\n    else todoListUL.classList.remove(\"scrollable\");\n    updateItemsLeft();\n}\n/*************************************/ /*Check and delete todo*/ /************************************/ todoListUL.addEventListener(\"click\", (e)=>{\n    const index = Array.from(todoListUL.children).indexOf(e.target.parentElement);\n    if (e.target.classList.contains(\"list-item-delete-icon\")) allTodos.splice(index, 1);\n    else if (e.target.classList.contains(\"list-item-checkbox\")) allTodos[index].completed = !allTodos[index].completed;\n    saveItem();\n    renderTodos();\n});\n/*************************************/ /*Clear completed*/ /************************************/ clearCompletedBtn.addEventListener(\"click\", ()=>{\n    allTodos = allTodos.filter((todo)=>!todo.completed);\n    saveItem();\n    renderTodos();\n});\n/*************************************/ /* Update Items Left*/ /************************************/ function updateItemsLeft() {\n    const activeCount = allTodos.filter((todo)=>!todo.completed).length;\n    itemsLeft.textContent = `${activeCount} item${activeCount !== 1 ? \"s\" : \"\"} left`;\n}\n/*************************************/ /*  Drag order functionality*/ /************************************/ todoListUL.addEventListener(\"dragstart\", (e)=>{\n    e.dataTransfer.setData(\"text\", Array.from(todoListUL.children).indexOf(e.target));\n});\ntodoListUL.addEventListener(\"dragover\", (e)=>{\n    e.preventDefault();\n});\ntodoListUL.addEventListener(\"drop\", (e)=>{\n    e.preventDefault();\n    const draggedIndex = e.dataTransfer.getData(\"text\");\n    const targetElement = e.target.closest(\"li\");\n    const targetIndex = Array.from(todoListUL.children).indexOf(targetElement);\n    if (draggedIndex !== targetIndex) {\n        const [movedTodo] = allTodos.splice(draggedIndex, 1);\n        allTodos.splice(targetIndex, 0, movedTodo);\n        saveItem();\n        renderTodos();\n    }\n});\nrenderTodos();\n\n//# sourceMappingURL=index.9d4b8674.js.map\n","const night = document.querySelector(\".night\");\r\nconst sunToggle = document.querySelector(\".sun-toggle\");\r\nconst todoSearch = document.querySelector(\".todoSearch\");\r\nconst todoInput = document.getElementById(\"todo-input\");\r\nconst todoListUL = document.querySelector(\".todo-list\");\r\nconst filterButtons = document.querySelectorAll(\".filter-buttons button\");\r\nconst clearCompletedBtn = document.querySelector(\".clear-completed\");\r\nconst itemsLeft = document.querySelector(\".items-left\");\r\nconst tourModal = document.getElementById(\"tourModal\");\r\nconst startTourBtn = document.getElementById(\"startTourBtn\");\r\nconst skipTourBtn = document.getElementById(\"skipTourBtn\");\r\n\r\n\r\n/*************************************/\r\n/*Theme toggle*/\r\n/************************************/\r\n\r\nsunToggle.addEventListener(\"click\", () => {\r\n  document.body.classList.toggle(\"night\");\r\n});\r\n\r\n/*************************************/\r\n/*Show tour modal on page load*/\r\n/************************************/\r\n\r\ntourModal.style.display = \"block\";\r\n\r\n/*************************************/\r\n/*Start the tour*/\r\n/************************************/\r\n\r\nstartTourBtn.onclick = function () {\r\n  tourModal.style.display = \"none\";\r\n  introJs()\r\n    .setOptions({\r\n      steps: [\r\n        {\r\n          intro: \"Welcome to SENT-TODO App! Let's take a quick tour.\",\r\n        },\r\n        {\r\n          element: document.querySelector(\".sun-toggle\"),\r\n          intro: \"Click here to change to Dark mode.\",\r\n        },\r\n        {\r\n          element: document.querySelector(\"#todo-input\"),\r\n          intro: \"You can create or search your tasks here.\",\r\n        },\r\n        {\r\n          element: document.querySelector(\".todo-list\"),\r\n          intro:\r\n            \"This is the 'To Do' section where you can see tasks that need to be started.\",\r\n        },\r\n        {\r\n          element: document.querySelector(\".filter-buttons\"),\r\n          intro: \"Use these buttons to filter tasks by their status.\",\r\n        },\r\n        {\r\n          element: document.querySelector(\".clear-completed\"),\r\n          intro: \"Click here to clear completed tasks.\",\r\n        },\r\n        {\r\n          element: document.querySelector(\".items-left\"),\r\n          intro: \"look here to check how mony active classes are left.\",\r\n        },\r\n        {\r\n          intro:\r\n            \"That's the end of the tour! You are ready to start using the dashboard.\",\r\n        },\r\n      ],\r\n    })\r\n    .start();\r\n};\r\n\r\n/*************************************/\r\n/*Skip the tour*/\r\n/************************************/\r\n\r\nskipTourBtn.onclick = function () {\r\n  tourModal.style.display = \"none\";\r\n};\r\n\r\n/*************************************/\r\n/*localStorage*/\r\n/************************************/\r\n\r\nlet allTodos = JSON.parse(localStorage.getItem(\"todos\")) || [];\r\nlet currentFilter = \"all\";\r\nconst saveItem = () => localStorage.setItem(\"todos\", JSON.stringify(allTodos));\r\n\r\n/*************************************/\r\n/*add input value*/\r\n/************************************/\r\n\r\ntodoSearch.addEventListener(\"submit\", (e) => {\r\n  e.preventDefault();\r\n  addTodo();\r\n});\r\n\r\nfunction addTodo() {\r\n  const todoText = todoInput.value.trim();\r\n  if (todoText.length > 0) {\r\n    const todoObject = {\r\n      text: todoText,\r\n      completed: false,\r\n    };\r\n    allTodos.push(todoObject);\r\n    saveItem();\r\n    renderTodos();\r\n    todoInput.value = \"\";\r\n  }\r\n}\r\n\r\n/*************************************/\r\n/*generate todo list*/\r\n/************************************/\r\n\r\nfunction createTodoItem(todo, index) {\r\n  const todoLi = document.createElement(\"li\");\r\n  const todoId = \"todo-\" + index;\r\n  todoLi.className = \"list\";\r\n  todoLi.draggable = true;\r\n\r\n  todoLi.innerHTML = `\r\n    <input type=\"checkbox\" id=\"${todoId}\" ${todo.completed ? \"checked\" : \"\"} />\r\n    <label for=\"${todoId}\" class=\"list-item-checkbox ${\r\n    todo.completed ? \"checked\" : \"\"\r\n  }\"></label>\r\n    <label for=\"${todoId}\" class=\"list-item-text ${\r\n    todo.completed ? \"completed\" : \"\"\r\n  }\">${todo.text}</label>\r\n    <div class=\"list-item-delete-icon\">❌</div>`;\r\n  return todoLi;\r\n}\r\n\r\n/*************************************/\r\n/*Filter todos (all, active, completed)*/\r\n/************************************/\r\n\r\nfilterButtons.forEach((button) => {\r\n  button.addEventListener(\"click\", () => {\r\n    filterButtons.forEach((btn) => btn.classList.remove(\"active\"));\r\n    button.classList.add(\"active\");\r\n    currentFilter = button.dataset.filter;\r\n    renderTodos();\r\n  });\r\n});\r\n\r\nfunction renderTodos() {\r\n  todoListUL.innerHTML = \"\";\r\n\r\n  const filteredTodos = allTodos.filter((todo) => {\r\n    if (currentFilter === \"active\") return !todo.completed;\r\n    if (currentFilter === \"completed\") return todo.completed;\r\n    return true;\r\n  });\r\n  filteredTodos.forEach((todo, index) => {\r\n    const todoItem = createTodoItem(todo, index);\r\n    todoListUL.appendChild(todoItem);\r\n  });\r\n  if (filteredTodos.length > 5) {\r\n    todoListUL.classList.add(\"scrollable\");\r\n  } else {\r\n    todoListUL.classList.remove(\"scrollable\");\r\n  }\r\n  updateItemsLeft();\r\n};\r\n\r\n/*************************************/\r\n/*Check and delete todo*/\r\n/************************************/\r\n\r\ntodoListUL.addEventListener(\"click\", (e) => {\r\n  const index = Array.from(todoListUL.children).indexOf(e.target.parentElement);\r\n  if (e.target.classList.contains(\"list-item-delete-icon\")) {\r\n    allTodos.splice(index, 1);\r\n  } else if (e.target.classList.contains(\"list-item-checkbox\")) {\r\n    allTodos[index].completed = !allTodos[index].completed;\r\n  }\r\n  saveItem();\r\n  renderTodos();\r\n});\r\n\r\n/*************************************/\r\n/*Clear completed*/\r\n/************************************/\r\n\r\nclearCompletedBtn.addEventListener(\"click\", () => {\r\n  allTodos = allTodos.filter((todo) => !todo.completed);\r\n  saveItem();\r\n  renderTodos();\r\n});\r\n\r\n/*************************************/\r\n/* Update Items Left*/\r\n/************************************/\r\n\r\nfunction updateItemsLeft() {\r\n  const activeCount = allTodos.filter((todo) => !todo.completed).length;\r\n  itemsLeft.textContent = `${activeCount} item${\r\n    activeCount !== 1 ? \"s\" : \"\"\r\n  } left`;\r\n}\r\n\r\n/*************************************/\r\n/*  Drag order functionality*/\r\n/************************************/\r\n\r\ntodoListUL.addEventListener(\"dragstart\", (e) => {\r\n  e.dataTransfer.setData(\r\n    \"text\",\r\n    Array.from(todoListUL.children).indexOf(e.target)\r\n  );\r\n});\r\n\r\ntodoListUL.addEventListener(\"dragover\", (e) => {\r\n  e.preventDefault();\r\n});\r\n\r\ntodoListUL.addEventListener(\"drop\", (e) => {\r\n  e.preventDefault();\r\n  const draggedIndex = e.dataTransfer.getData(\"text\");\r\n  const targetElement = e.target.closest(\"li\");\r\n  const targetIndex = Array.from(todoListUL.children).indexOf(targetElement);\r\n\r\n  if (draggedIndex !== targetIndex) {\r\n    const [movedTodo] = allTodos.splice(draggedIndex, 1);\r\n    allTodos.splice(targetIndex, 0, movedTodo);\r\n    saveItem();\r\n    renderTodos();\r\n  }\r\n});\r\n\r\nrenderTodos();\r\n"],"names":["document","querySelector","sunToggle","todoSearch","todoInput","getElementById","todoListUL","filterButtons","querySelectorAll","clearCompletedBtn","itemsLeft","tourModal","startTourBtn","skipTourBtn","addEventListener","body","classList","toggle","style","display","onclick","introJs","setOptions","steps","intro","element","start","allTodos","JSON","parse","localStorage","getItem","currentFilter","saveItem","setItem","stringify","renderTodos","innerHTML","filteredTodos","filter","todo","completed","forEach","index","todoItem","createTodoItem","todoLi","createElement","todoId","className","draggable","text","appendChild","length","add","remove","updateItemsLeft","activeCount","textContent","e","preventDefault","addTodo","todoText","value","trim","push","button","btn","dataset","Array","from","children","indexOf","target","parentElement","contains","splice","dataTransfer","setData","draggedIndex","getData","targetElement","closest","targetIndex","movedTodo"],"version":3,"file":"index.9d4b8674.js.map"}